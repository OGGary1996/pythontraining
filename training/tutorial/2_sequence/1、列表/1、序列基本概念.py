#序列（sequence）
#序列是python中最基本的一种数据结构（计算机中数据的储存方式）
#序列用于保存一组有序的数据，每一个数据在数列中都有唯一一个索引，这个索引通过添加数据的时的顺序进行分配。
#分类：
#可变序列（序列中的元素可变）：列表（list）
#不可变序列（序列中的元素不可变）：字符串（str），元组（tuple）

#=========================================================================================================

#列表（list）
#列表是python中的一个对象，用于储存有序的数据。
Gary_List = ['孙悟空','猪八戒','沙僧','唐僧','白骨精','蜘蛛精']
#获取列表中具体每个位置索引(index)的元素，Gary_List[具体索引]，index的起始位置是0！也可以是负数，表示从后向前获取，-1表示倒数第1个。
#获取列表总长度，len（），起始位置是1 ！
print(f'列表中第三个元素是{Gary_List[2]}，整个列表的长度是{len(Gary_List)}')

#切片 (slice) 从现有列表中提取一个子列表，返回一个新的列表，不会影响到原来的列表
print(f'列表中徒弟三人分别是{Gary_List[0:3]}') #切片操作时，起始索引0会被选取，但是终止索引3不会，类似于 [) 集合。
print(f'列表中徒弟三人分别是{Gary_List[:3]}') # 如果不写起始索引，则会从开始位置开始，反之亦然。
print(f'列表中徒弟三人分别是{Gary_List[:]}') #如果起终止位置都不写，则会创建一个该列表的副本列表。

#步长 (step)
print(Gary_List[::1]) #步长默认为1，表示切片取元素的时候的间隔取值。
print(Gary_List[::2])
print(Gary_List[::-1]) #步长可以取负数，-1表示将列表倒置，其他值表示倒置并按步长取值。
print(Gary_List[::-2]) 

#通用操作

# + 和 *
# + 进行列表的拼接
my_list = [1,2,3] + [4,5,6]
print(my_list)
# * 进行列表的重复
my_list = [1,2,3] * 2
print(my_list)

# in 和 not in
# in 用来检查元素是否在list中
print('沙僧' in Gary_List)
# not in 用于检查元素是否不在list中
print('沙僧' not in Gary_List)

# len max min
# 分别用于获取列表的长度，列表中元素的最大值与最小值。

# 两个方法 (method)，方法和函数基本一样，但是方法必须通过 “ 对象.方法（） ” 的形式来调用。
# s.index(x,[i,j]) 获取指定的元素在列表中第一次出现时的索引。
print(Gary_List.index('孙悟空'))
print(Gary_List.index('唐僧',2,5)) # i 与 j表示查找的起点与终点
# s.cuont() 统计指定的元素在列表中出现的次数。
print(Gary_List.count('沙僧'))

#==================================================================================================

